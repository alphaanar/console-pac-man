#ifndef __MACRO_UTILS_H__
#define __MACRO_UTILS_H__

#define __STR(value) #value
#define STR(value) __STR(value)

#define __WCS(value) L""#value
#define WCS(value) __WCS(value)

#define __CONCAT(a, b) a##b
#define CONCAT(a, b) __CONCAT(a, b)

#define __ARGUMENT_COUNT_SHIFT(_00, _01, _02, _03, _04, _05, _06, _07, _08, _09, _0A, _0B, _0C, _0D, _0E, _0F, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _1A, _1B, _1C, _1D, _1E, N, ...) N
#define __ARGUMENT_COUNT(...) __ARGUMENT_COUNT_SHIFT(, ## __VA_ARGS__ 1F, 1E, 1D, 1C, 1B, 1A, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 0F, 0E, 0D, 0C, 0B, 0A, 09, 08, 07, 06, 05, 04, 03, 02, 01, 00)
#define ARGUMENT_COUNT(...) CONCAT(0x, __ARGUMENT_COUNT(__VA_ARGS__))

#define __AGGREGATE_00(aggregate, accumulator) aggregate
#define __AGGREGATE_01(aggregate, accumulator, current, ...) accumulator(aggregate, current)
#define __AGGREGATE_02(aggregate, accumulator, current, ...) __AGGREGATE_01(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_03(aggregate, accumulator, current, ...) __AGGREGATE_02(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_04(aggregate, accumulator, current, ...) __AGGREGATE_03(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_05(aggregate, accumulator, current, ...) __AGGREGATE_04(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_06(aggregate, accumulator, current, ...) __AGGREGATE_05(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_07(aggregate, accumulator, current, ...) __AGGREGATE_06(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_08(aggregate, accumulator, current, ...) __AGGREGATE_07(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_09(aggregate, accumulator, current, ...) __AGGREGATE_08(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_0A(aggregate, accumulator, current, ...) __AGGREGATE_09(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_0B(aggregate, accumulator, current, ...) __AGGREGATE_0A(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_0C(aggregate, accumulator, current, ...) __AGGREGATE_0B(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_0D(aggregate, accumulator, current, ...) __AGGREGATE_0C(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_0E(aggregate, accumulator, current, ...) __AGGREGATE_0D(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_0F(aggregate, accumulator, current, ...) __AGGREGATE_0E(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_10(aggregate, accumulator, current, ...) __AGGREGATE_0F(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_11(aggregate, accumulator, current, ...) __AGGREGATE_10(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_12(aggregate, accumulator, current, ...) __AGGREGATE_11(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_13(aggregate, accumulator, current, ...) __AGGREGATE_12(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_14(aggregate, accumulator, current, ...) __AGGREGATE_13(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_15(aggregate, accumulator, current, ...) __AGGREGATE_14(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_16(aggregate, accumulator, current, ...) __AGGREGATE_15(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_17(aggregate, accumulator, current, ...) __AGGREGATE_16(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_18(aggregate, accumulator, current, ...) __AGGREGATE_17(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_19(aggregate, accumulator, current, ...) __AGGREGATE_18(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_1A(aggregate, accumulator, current, ...) __AGGREGATE_19(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_1B(aggregate, accumulator, current, ...) __AGGREGATE_1A(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_1C(aggregate, accumulator, current, ...) __AGGREGATE_1B(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_1D(aggregate, accumulator, current, ...) __AGGREGATE_1C(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_1E(aggregate, accumulator, current, ...) __AGGREGATE_1D(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE_1F(aggregate, accumulator, current, ...) __AGGREGATE_1E(accumulator(aggregate, current), accumulator, __VA_ARGS__)
#define __AGGREGATE__(init, accumulator, count, ...) CONCAT(__AGGREGATE_, count)(init, accumulator, ## __VA_ARGS__)
#define AGGREGATE(init, accumulator, ...) __AGGREGATE__(init, accumulator, __ARGUMENT_COUNT(__VA_ARGS__), ## __VA_ARGS__)

#define __SELECT_00(selector, ...)
#define __SELECT_01(selector, current, ...) selector(current)
#define __SELECT_02(selector, current, ...) selector(current), __SELECT_01(selector, __VA_ARGS__)
#define __SELECT_03(selector, current, ...) selector(current), __SELECT_02(selector, __VA_ARGS__)
#define __SELECT_04(selector, current, ...) selector(current), __SELECT_03(selector, __VA_ARGS__)
#define __SELECT_05(selector, current, ...) selector(current), __SELECT_04(selector, __VA_ARGS__)
#define __SELECT_06(selector, current, ...) selector(current), __SELECT_05(selector, __VA_ARGS__)
#define __SELECT_07(selector, current, ...) selector(current), __SELECT_06(selector, __VA_ARGS__)
#define __SELECT_08(selector, current, ...) selector(current), __SELECT_07(selector, __VA_ARGS__)
#define __SELECT_09(selector, current, ...) selector(current), __SELECT_08(selector, __VA_ARGS__)
#define __SELECT_0A(selector, current, ...) selector(current), __SELECT_09(selector, __VA_ARGS__)
#define __SELECT_0B(selector, current, ...) selector(current), __SELECT_0A(selector, __VA_ARGS__)
#define __SELECT_0C(selector, current, ...) selector(current), __SELECT_0B(selector, __VA_ARGS__)
#define __SELECT_0D(selector, current, ...) selector(current), __SELECT_0C(selector, __VA_ARGS__)
#define __SELECT_0E(selector, current, ...) selector(current), __SELECT_0D(selector, __VA_ARGS__)
#define __SELECT_0F(selector, current, ...) selector(current), __SELECT_0E(selector, __VA_ARGS__)
#define __SELECT_10(selector, current, ...) selector(current), __SELECT_0F(selector, __VA_ARGS__)
#define __SELECT_11(selector, current, ...) selector(current), __SELECT_10(selector, __VA_ARGS__)
#define __SELECT_12(selector, current, ...) selector(current), __SELECT_11(selector, __VA_ARGS__)
#define __SELECT_13(selector, current, ...) selector(current), __SELECT_12(selector, __VA_ARGS__)
#define __SELECT_14(selector, current, ...) selector(current), __SELECT_13(selector, __VA_ARGS__)
#define __SELECT_15(selector, current, ...) selector(current), __SELECT_14(selector, __VA_ARGS__)
#define __SELECT_16(selector, current, ...) selector(current), __SELECT_15(selector, __VA_ARGS__)
#define __SELECT_17(selector, current, ...) selector(current), __SELECT_16(selector, __VA_ARGS__)
#define __SELECT_18(selector, current, ...) selector(current), __SELECT_17(selector, __VA_ARGS__)
#define __SELECT_19(selector, current, ...) selector(current), __SELECT_18(selector, __VA_ARGS__)
#define __SELECT_1A(selector, current, ...) selector(current), __SELECT_19(selector, __VA_ARGS__)
#define __SELECT_1B(selector, current, ...) selector(current), __SELECT_1A(selector, __VA_ARGS__)
#define __SELECT_1C(selector, current, ...) selector(current), __SELECT_1B(selector, __VA_ARGS__)
#define __SELECT_1D(selector, current, ...) selector(current), __SELECT_1C(selector, __VA_ARGS__)
#define __SELECT_1E(selector, current, ...) selector(current), __SELECT_1D(selector, __VA_ARGS__)
#define __SELECT_1F(selector, current, ...) selector(current), __SELECT_1E(selector, __VA_ARGS__)
#define __SELECT__(selector, count, ...) CONCAT(__SELECT_, count)(selector, ## __VA_ARGS__)
#define SELECT(selector, ...) __SELECT__(selector, __ARGUMENT_COUNT(__VA_ARGS__), ## __VA_ARGS__)

#define __JOIN_00(delimiter, ...)
#define __JOIN_01(delimiter, current, ...) current
#define __JOIN_02(delimiter, current, ...) current delimiter __JOIN_01(delimiter, __VA_ARGS__)
#define __JOIN_03(delimiter, current, ...) current delimiter __JOIN_02(delimiter, __VA_ARGS__)
#define __JOIN_04(delimiter, current, ...) current delimiter __JOIN_03(delimiter, __VA_ARGS__)
#define __JOIN_05(delimiter, current, ...) current delimiter __JOIN_04(delimiter, __VA_ARGS__)
#define __JOIN_06(delimiter, current, ...) current delimiter __JOIN_05(delimiter, __VA_ARGS__)
#define __JOIN_07(delimiter, current, ...) current delimiter __JOIN_06(delimiter, __VA_ARGS__)
#define __JOIN_08(delimiter, current, ...) current delimiter __JOIN_07(delimiter, __VA_ARGS__)
#define __JOIN_09(delimiter, current, ...) current delimiter __JOIN_08(delimiter, __VA_ARGS__)
#define __JOIN_0A(delimiter, current, ...) current delimiter __JOIN_09(delimiter, __VA_ARGS__)
#define __JOIN_0B(delimiter, current, ...) current delimiter __JOIN_0A(delimiter, __VA_ARGS__)
#define __JOIN_0C(delimiter, current, ...) current delimiter __JOIN_0B(delimiter, __VA_ARGS__)
#define __JOIN_0D(delimiter, current, ...) current delimiter __JOIN_0C(delimiter, __VA_ARGS__)
#define __JOIN_0E(delimiter, current, ...) current delimiter __JOIN_0D(delimiter, __VA_ARGS__)
#define __JOIN_0F(delimiter, current, ...) current delimiter __JOIN_0E(delimiter, __VA_ARGS__)
#define __JOIN_10(delimiter, current, ...) current delimiter __JOIN_0F(delimiter, __VA_ARGS__)
#define __JOIN_11(delimiter, current, ...) current delimiter __JOIN_10(delimiter, __VA_ARGS__)
#define __JOIN_12(delimiter, current, ...) current delimiter __JOIN_11(delimiter, __VA_ARGS__)
#define __JOIN_13(delimiter, current, ...) current delimiter __JOIN_12(delimiter, __VA_ARGS__)
#define __JOIN_14(delimiter, current, ...) current delimiter __JOIN_13(delimiter, __VA_ARGS__)
#define __JOIN_15(delimiter, current, ...) current delimiter __JOIN_14(delimiter, __VA_ARGS__)
#define __JOIN_16(delimiter, current, ...) current delimiter __JOIN_15(delimiter, __VA_ARGS__)
#define __JOIN_17(delimiter, current, ...) current delimiter __JOIN_16(delimiter, __VA_ARGS__)
#define __JOIN_18(delimiter, current, ...) current delimiter __JOIN_17(delimiter, __VA_ARGS__)
#define __JOIN_19(delimiter, current, ...) current delimiter __JOIN_18(delimiter, __VA_ARGS__)
#define __JOIN_1A(delimiter, current, ...) current delimiter __JOIN_19(delimiter, __VA_ARGS__)
#define __JOIN_1B(delimiter, current, ...) current delimiter __JOIN_1A(delimiter, __VA_ARGS__)
#define __JOIN_1C(delimiter, current, ...) current delimiter __JOIN_1B(delimiter, __VA_ARGS__)
#define __JOIN_1D(delimiter, current, ...) current delimiter __JOIN_1C(delimiter, __VA_ARGS__)
#define __JOIN_1E(delimiter, current, ...) current delimiter __JOIN_1D(delimiter, __VA_ARGS__)
#define __JOIN_1F(delimiter, current, ...) current delimiter __JOIN_1E(delimiter, __VA_ARGS__)
#define __JOIN__(delimiter, count, ...) CONCAT(__JOIN_, count)(delimiter, ## __VA_ARGS__)
#define JOIN(delimiter, ...) __JOIN__(delimiter, __ARGUMENT_COUNT(__VA_ARGS__), ## __VA_ARGS__)

#endif
